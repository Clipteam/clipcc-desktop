name: Build

# Controls when the action will run. 
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out git repository
        uses: actions/checkout@v1

      - name: Install node.js, npm and yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Yarn Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: |
          yarn
          yarn global add cross-env
          cd node_modules/clipcc-gui
          yarn
          cd ../..
      - name: Compile
        run: |
          cd node_modules/clipcc-gui
          cross-env NODE_ENV=production yarn run build:dist
          cd ../..
          cross-env NODE_ENV=production yarn run compile
          
      - name: Build (Linux)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: yarn electron-builder --linux --x64
  
      - name: Build (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: yarn electron-builder --win --ia32 --x64
      - name: Build (Mac OS)
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: yarn electron-builder --mac
