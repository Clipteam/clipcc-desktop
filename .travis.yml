jobs:
  include:
    - os: linux
      dist: bionic
      language: node_js
      node_js: 14
      before_script:
        - sudo apt-get -qq install --no-install-recommends gcc-multilib g++-multilib lzip rpm
        - sudo apt-get purge -y --auto-remove && sudo rm -rf /var/lib/apt/lists/*
        - sudo apt-get update
        - sudo apt-get install -y --no-install-recommends software-properties-common
        - sudo dpkg --add-architecture i386
        - sudo curl -L https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/Release.key > winehq.key
        - sudo apt-key add winehq.key
        - sudo apt-add-repository 'https://dl.winehq.org/wine-builds/ubuntu/ xenial main'
        - sudo apt-get update
        - sudo apt-get -y purge software-properties-common libdbus-glib-1-2 python3-dbus python3-gi python3-pycurl python3-software-properties
        - sudo apt-get install -y --no-install-recommends --allow-unauthenticated winehq-stable
        - sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/* && sudo unlink winehq.key
    - os: osx
      osx_image: xcode12.5
      language: node_js
      node_js: 14
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      before_script:
        - export CSC_IDENTITY_AUTO_DISCOVERY=false

before_install:
  - npm install -g cross-env
  - git clone https://github.com/Clipteam/clipcc-gui.git ../clipcc-gui --depth=10
  - git clone https://github.com/Clipteam/clipcc-gui.git ../clipcc-vm --depth=10
  - git clone https://github.com/Clipteam/clipcc-gui.git ../clipcc-block --depth=10

install:
  - yarn --frozen-lockfile
  - cd ../clipcc-gui
  - yarn --frozen-lockfile && yarn link
  - NODE_ENV=production yarn run build:dist
  - cd ../clipcc-vm && yarn link
  - cd ../clipcc-block && yarn link
  - cd ../clipcc-desktop
  - yarn link clipcc-gui
  - yarn link clipcc-vm
  - yarn link clipcc-block

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      yarn run fetch
      NODE_ENV=production yarn run compile
      yarn electron-builder --linux --x64
      yarn electron-builder --win --ia32 --x64
    else
      yarn run fetch
      NODE_ENV=production yarn run compile
      yarn electron-builder --mac
    fi

deploy:
  provider: releases
  token: $GITHUB_TOKEN
  file_glob: true
  file:
    - dist/*-*-*-*.zip
    - dist/*-*-*-*.deb
    - dist/*-*-*-*.rpm
    - dist/*-*-*-*.exe
    - dist/*-*-*-*.dmg
    - dist/*-*-*-*.pkg
  on:
    tags: true
